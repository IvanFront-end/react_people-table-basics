{"version":3,"sources":["components/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","isError","setIsError","useParams","slug","useEffect","data","catch","finally","length","map","person","classNames","to","sex","name","born","died","fatherName","motherName","getClassName","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.735099d8.chunk.js","sourcesContent":["export const HomePage = () => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((data) => {\n        setPeople(data);\n      })\n      .catch(setIsError)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  if (isError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  if (people?.length === 0) {\n    return <p data-cy=\"noPeopleMessage\">There are no people on the server</p>;\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isLoading ? (\n            <>\n              <Loader />\n            </>\n          ) : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n              <tbody>\n                {people?.map((person) => (\n                  <tr\n                    key={person.name}\n                    data-cy=\"person\"\n                    className={classNames({\n                      'has-background-warning': slug === person.slug,\n                    })}\n                  >\n                    <td>\n                      <NavLink\n                        to={`../${person.slug}`}\n                        className={classNames({\n                          'has-text-danger': person.sex === 'f',\n                        })}\n                      >\n                        {person.name}\n                      </NavLink>\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>{person.fatherName ? person.fatherName : '-'}</td>\n                    <td>{person.motherName ? person.motherName : '-'}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport {\n  Routes, Route, Navigate, NavLink,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\n\nconst getClassName = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getClassName}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={getClassName}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\"/people/:slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}